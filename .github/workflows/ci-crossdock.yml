name: CIT Crossdock

on:
  merge_group:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ (github.event.pull_request && github.event.pull_request.number) || github.ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  crossdock:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        query_version: [v1, v2] # Run the job for both Jaeger Query v1 and v2

    steps:
    - uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
      with:
        egress-policy: audit # TODO: change to 'block' after a few runs

    - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      with:
        submodules: true

    - name: Fetch git tags
      run: |
        git fetch --prune --unshallow --tags

    - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
      with:
        go-version: 1.24.x

    - uses: ./.github/actions/setup-branch

    - run: make install-ci

    - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

    - name: Build, test, and publish crossdock image
      run: bash scripts/build/build-crossdock.sh
      env:
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        QUAY_TOKEN: ${{ secrets.QUAY_TOKEN }}

    - name: Run Jaeger Query ${{ matrix.query_version }} integration test
      run: |
        if [ "${{ matrix.query_version }}" == "v1" ]; then
      # Start Jaeger Query v1
          jaeger-query --config-file=examples/jaeger-query-v1.yaml &
        else
      # Start Jaeger Query v2 (otelcol-based)
          otelcol --config=examples/jaeger-query-v2.yaml &
        fi
        sleep 10
        curl -f http://localhost:16686  # Validate that the query service is running
    # Capture logs if the test fails
        - name: Output crossdock logs
      run: make crossdock-logs
      if: ${{ failure() }}
